{"ast":null,"code":"var _jsxFileName = \"/home/agus/Desktop/PROJECTS/LAIKA/frontend/src/Components/ExpedienteMedico/ExpedienteMedico.js\";\nimport React, { Component } from \"react\";\nimport Diagnostico from \"./Subcomponentes/Diagnostico\";\nimport Esterilizacion from \"./Subcomponentes/Esterilizacion\";\nimport CartillaVacunacion from \"./Subcomponentes/CartillaVacunacion\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport NavBarRegistros from \"../SharedComponents/NavBarRegistros\";\nimport shortid from \"shortid\";\nimport DataGridMed from \"./Subcomponentes/DataGridMed\";\nimport Foto from \"../SharedComponents/Foto\";\nimport \"./Styles/ExpedienteMedico.css\";\nimport queryString from \"query-string\";\nimport { validationExpMed } from \"./Functions/validationExpMed\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport ErrorPage from \"../SharedComponents/ErrorPage\";\nimport api from \"../SharedComponents/APIConfig\";\n\nclass ExpedienteMedico extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      /*ID*/\n      id: \"\",\n\n      /*Diagnóstico*/\n      atropellamiento: false,\n      tvt: false,\n      sarnaPiel: false,\n      viral: false,\n      embarazo: false,\n      cachorros: false,\n      hemoparasitos: false,\n      otro: false,\n      otroEspecificar: \"\",\n\n      /*Esterilización*/\n      esterilizado: \"\",\n      citaEsterilizacion: \"\",\n      fechaEsterilizacion: null,\n\n      /*Cartilla de Vacunación*/\n      vacuna1: false,\n      vacuna2: false,\n      vacuna3: false,\n      vacuna4: false,\n      vacuna5: false,\n      fechaVacuna1: null,\n      fechaVacuna2: null,\n      fechaVacuna3: null,\n      fechaVacuna4: null,\n      fechaVacuna5: null,\n\n      /*Fotos*/\n      foto1: null,\n      foto2: null,\n      foto3: null,\n\n      /*Tratamiento*/\n      tratamiento: [],\n      especie: \"\",\n      openError: false,\n      openSuccess: false,\n      msg: \"\",\n      showErrorPage: false\n    };\n\n    this.imageHandler = event => {\n      try {\n        const reader = new FileReader();\n        const foto = event.target.id;\n\n        reader.onload = () => {\n          if (reader.readyState === 2) {\n            this.setState({\n              [foto]: reader.result\n            });\n          }\n        };\n\n        reader.readAsDataURL(event.target.files[0]);\n      } catch (error) {}\n    };\n\n    this.handleChange = event => {\n      const value = event.target.type === \"checkbox\" ? event.target.checked : event.target.value;\n\n      if (event.target.name === \"otro\") {\n        this.setState({ ...this.state,\n          otroEspecificar: \"\",\n          [event.target.name]: value\n        });\n      } else if (event.target.id === \"idCitaEsterilzacionNo\") {\n        this.setState({ ...this.state,\n          fechaEsterilizacion: null,\n          [event.target.name]: value\n        });\n      } else {\n        this.setState({ ...this.state,\n          [event.target.name]: value\n        });\n      }\n    };\n\n    this.handleDate = (fecha, name) => {\n      this.setState({\n        [name]: fecha\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.updateDB();\n    };\n\n    this.updateDB = () => {\n      fetch(api.url + \"/expedienteMedico\", {\n        method: \"put\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(this.state)\n      }).then(response => response.json()).then(response => {}).catch(err => console.log(err));\n    };\n\n    this.handleRestablecer = () => {\n      this.fetchData();\n    };\n\n    this.fetchData = () => {\n      let url = this.props.location.search;\n      let params = queryString.parse(url);\n\n      if (!params.id) {\n        this.setState({\n          showErrorPage: true\n        });\n        return;\n      } else {\n        this.setState({\n          id: params.id\n        });\n      }\n\n      fetch(api.url + \"/expedienteMedico/?id=\" + params.id, {\n        method: \"get\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(response => {\n        if (Object.keys(response).length === 1) {\n          this.setState({\n            showErrorPage: true\n          });\n          return;\n        }\n\n        for (const element in response) {\n          if (element.includes(\"fecha\")) {\n            const date = response[element];\n            if (!date || date === \"\" || date === \"0000-00-00\") continue;\n            this.setState({\n              [element]: new Date(date)\n            });\n          } else if (element.includes(\"foto\")) {\n            if (response[element]) {\n              var buffer = Buffer.from(response[element].data);\n              this.setState({\n                [element]: buffer.toString(\"utf8\")\n              });\n            }\n          } else {\n            this.setState({\n              [element]: response[element]\n            });\n          }\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.addRow = event => {\n      event.preventDefault();\n      const newRow = {\n        id: shortid.generate(),\n        fechaInicio: null,\n        fechaFinal: null,\n        comentarios: \"\",\n        accion: \"\",\n        citaMedica: null\n      };\n      this.setState(state => ({\n        tratamiento: [newRow, ...state.tratamiento]\n      }));\n    };\n\n    this.deleteRow = id => {\n      this.setState(state => ({\n        tratamiento: state.tratamiento.filter(row => row.id !== id)\n      }));\n    };\n\n    this.modifyRow = (id, name, value) => {\n      let dataTemp = this.state.tratamiento;\n      if (!dataTemp) return;\n      dataTemp.forEach(element => {\n        if (element.id === id) {\n          if (name === \"fechaInicio\") element.fechaInicio = value;else if (name === \"fechaFinal\") element.fechaFinal = value;else if (name === \"comentarios\") element.comentarios = value;else if (name === \"accion\") element.accion = value;else if (name === \"citaMedica\") element.citaMedica = value;\n        }\n      });\n      this.setState({\n        tratamiento: dataTemp\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n  /*Manejador de datagrid medico*/\n\n\n  handleAlert(e, msg) {\n    if (e === \"openSuccess\") {\n      this.setState({ ...this.state,\n        openError: false,\n        openSuccess: true\n      });\n    } else if (e === \"openError\") {\n      this.setState({ ...this.state,\n        openError: true,\n        openSuccess: false,\n        msg: msg\n      });\n    }\n  }\n  /*Expediente Médico*/\n\n\n  render() {\n    if (this.state.showErrorPage) return /*#__PURE__*/React.createElement(ErrorPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 46\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"RegistroMedico\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"NavBarRegistrosMedico\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavBarRegistros, {\n      tabIndicatorPosition: \"25%\",\n      activePosition: \"ExpedienteMedico\",\n      id: this.state.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alertExp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Collapse, {\n      in: this.state.openError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      onClose: () => {\n        this.setState({ ...this.state,\n          openError: false\n        });\n      },\n      variant: \"outlined\",\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(AlertTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 29\n      }\n    }, \"Error - Faltan llenar los siguientes campos\"), this.state.msg)), /*#__PURE__*/React.createElement(Collapse, {\n      in: this.state.openSuccess,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      onClose: () => {\n        this.setState({ ...this.state,\n          openSuccess: false\n        });\n      },\n      variant: \"outlined\",\n      severity: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(AlertTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 29\n      }\n    }, \"Datos guardados\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormularioMedico\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"diagnostico\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Diagnostico, {\n      atropellamiento: this.state.atropellamiento,\n      tvt: this.state.tvt,\n      sarnaPiel: this.state.sarnaPiel,\n      viral: this.state.viral,\n      embarazo: this.state.embarazo,\n      cachorros: this.state.cachorros,\n      hemoparasitos: this.state.hemoparasitos,\n      otro: this.state.otro,\n      otroEspecificar: this.state.otroEspecificar,\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"esterilizacion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Esterilizacion, {\n      esterilizado: this.state.esterilizado,\n      citaEsterilizacion: this.state.citaEsterilizacion,\n      fechaEsterilizacion: this.state.fechaEsterilizacion,\n      handleChange: this.handleChange,\n      handleDate: this.handleDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cartillaVacunacion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CartillaVacunacion, {\n      vacuna1: this.state.vacuna1,\n      vacuna2: this.state.vacuna2,\n      vacuna3: this.state.vacuna3,\n      vacuna4: this.state.vacuna4,\n      vacuna5: this.state.vacuna5,\n      fechaVacuna1: this.state.fechaVacuna1,\n      fechaVacuna2: this.state.fechaVacuna2,\n      fechaVacuna3: this.state.fechaVacuna3,\n      fechaVacuna4: this.state.fechaVacuna4,\n      fechaVacuna5: this.state.fechaVacuna5,\n      handleChange: this.handleChange,\n      handleDate: this.handleDate,\n      especie: this.state.especie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tratamiento\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"headerTratamiento\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 25\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n      \"aria-hidden\": \"true\",\n      className: \"fa fa-heartbeat fa-fw separation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 29\n      }\n    }), \"Tratamiento\"), /*#__PURE__*/React.createElement(DataGridMed, {\n      data: this.state.tratamiento,\n      modifyRow: this.modifyRow,\n      addRow: this.addRow,\n      deleteRow: this.deleteRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"BarraLateralMedico\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"idLabelMedico\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 25\n      }\n    }, \"ID: \", this.state.id)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fotoMedico1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Foto, {\n      id: \"foto1\",\n      className: \"pt3\",\n      foto: this.state.foto1,\n      imageHandler: this.imageHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fotoMedico2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Foto, {\n      id: \"foto2\",\n      className: \"pt3\",\n      foto: this.state.foto2,\n      imageHandler: this.imageHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fotoMedico3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Foto, {\n      id: \"foto3\",\n      className: \"pt3\",\n      foto: this.state.foto3,\n      imageHandler: this.imageHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"BotonesRegistroMedico\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/Laika/RegistroGeneral\" + this.props.location.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"BotonMedicoTransicion BotonAnteriorMedico\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 25\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n      \"aria-hidden\": \"true\",\n      className: \"fa fa-chevron-circle-left fa-fw\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 29\n      }\n    }), \"Registro General\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"BotonMedicoRestablecer BotonCentralMedico\",\n      onClick: this.handleRestablecer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 21\n      }\n    }, \"Restablecer\", \" \", /*#__PURE__*/React.createElement(\"i\", {\n      \"aria-hidden\": \"true\",\n      className: \"fa fa-eraser fa-fw\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"BotonMedicoGuardar BotonCentralMedico\",\n      onClick: event => {\n        const alert = validationExpMed(this.state);\n\n        if (alert.isValid) {\n          this.handleSubmit(event);\n          this.handleAlert(\"openSuccess\");\n        } else {\n          this.handleAlert(\"openError\", alert.msg);\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 21\n      }\n    }, \"Guardar\", \" \", /*#__PURE__*/React.createElement(\"i\", {\n      \"aria-hidden\": \"true\",\n      className: \"fa fa-save fa-fw\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: \"/Laika/HogarTemporal\" + this.props.location.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"BotonMedicoTransicion BotonSiguienteMedico\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 25\n      }\n    }, \"Hogar Temporal\", \" \", /*#__PURE__*/React.createElement(\"i\", {\n      \"aria-hidden\": \"true\",\n      className: \"fa fa-chevron-circle-right fa-fw\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nexport default withRouter(ExpedienteMedico);","map":{"version":3,"sources":["/home/agus/Desktop/PROJECTS/LAIKA/frontend/src/Components/ExpedienteMedico/ExpedienteMedico.js"],"names":["React","Component","Diagnostico","Esterilizacion","CartillaVacunacion","Link","withRouter","NavBarRegistros","shortid","DataGridMed","Foto","queryString","validationExpMed","AlertTitle","Collapse","Alert","ErrorPage","api","ExpedienteMedico","state","id","atropellamiento","tvt","sarnaPiel","viral","embarazo","cachorros","hemoparasitos","otro","otroEspecificar","esterilizado","citaEsterilizacion","fechaEsterilizacion","vacuna1","vacuna2","vacuna3","vacuna4","vacuna5","fechaVacuna1","fechaVacuna2","fechaVacuna3","fechaVacuna4","fechaVacuna5","foto1","foto2","foto3","tratamiento","especie","openError","openSuccess","msg","showErrorPage","imageHandler","event","reader","FileReader","foto","target","onload","readyState","setState","result","readAsDataURL","files","error","handleChange","value","type","checked","name","handleDate","fecha","handleSubmit","preventDefault","updateDB","fetch","url","method","headers","body","JSON","stringify","then","response","json","catch","err","console","log","handleRestablecer","fetchData","props","location","search","params","parse","Object","keys","length","element","includes","date","Date","buffer","Buffer","from","data","toString","addRow","newRow","generate","fechaInicio","fechaFinal","comentarios","accion","citaMedica","deleteRow","filter","row","modifyRow","dataTemp","forEach","componentDidMount","handleAlert","e","render","alert","isValid"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Diagnostico from \"./Subcomponentes/Diagnostico\";\nimport Esterilizacion from \"./Subcomponentes/Esterilizacion\";\nimport CartillaVacunacion from \"./Subcomponentes/CartillaVacunacion\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport NavBarRegistros from \"../SharedComponents/NavBarRegistros\";\nimport shortid from \"shortid\";\nimport DataGridMed from \"./Subcomponentes/DataGridMed\";\nimport Foto from \"../SharedComponents/Foto\";\nimport \"./Styles/ExpedienteMedico.css\";\nimport queryString from \"query-string\";\nimport { validationExpMed } from \"./Functions/validationExpMed\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport ErrorPage from \"../SharedComponents/ErrorPage\";\nimport api from \"../SharedComponents/APIConfig\";\n\nclass ExpedienteMedico extends Component {\n    state = {\n        /*ID*/\n        id: \"\",\n\n        /*Diagnóstico*/\n        atropellamiento: false,\n        tvt: false,\n        sarnaPiel: false,\n        viral: false,\n        embarazo: false,\n        cachorros: false,\n        hemoparasitos: false,\n        otro: false,\n        otroEspecificar: \"\",\n\n        /*Esterilización*/\n        esterilizado: \"\",\n        citaEsterilizacion: \"\",\n        fechaEsterilizacion: null,\n\n        /*Cartilla de Vacunación*/\n        vacuna1: false,\n        vacuna2: false,\n        vacuna3: false,\n        vacuna4: false,\n        vacuna5: false,\n\n        fechaVacuna1: null,\n        fechaVacuna2: null,\n        fechaVacuna3: null,\n        fechaVacuna4: null,\n        fechaVacuna5: null,\n\n        /*Fotos*/\n        foto1: null,\n        foto2: null,\n        foto3: null,\n\n        /*Tratamiento*/\n        tratamiento: [],\n\n        especie: \"\",\n\n        openError: false,\n        openSuccess: false,\n        msg: \"\",\n        showErrorPage: false,\n    };\n\n    /*Manejador de imágenes*/\n    imageHandler = (event) => {\n        try {\n            const reader = new FileReader();\n            const foto = event.target.id;\n\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    this.setState({ [foto]: reader.result });\n                }\n            };\n            reader.readAsDataURL(event.target.files[0]);\n        } catch (error) {}\n    };\n\n    /*Manejador de eventos*/\n    handleChange = (event) => {\n        const value =\n            event.target.type === \"checkbox\"\n                ? event.target.checked\n                : event.target.value;\n        if (event.target.name === \"otro\") {\n            this.setState({\n                ...this.state,\n                otroEspecificar: \"\",\n                [event.target.name]: value,\n            });\n        } else if (event.target.id === \"idCitaEsterilzacionNo\") {\n            this.setState({\n                ...this.state,\n                fechaEsterilizacion: null,\n                [event.target.name]: value,\n            });\n        } else {\n            this.setState({\n                ...this.state,\n                [event.target.name]: value,\n            });\n        }\n    };\n\n    /*Manejador de dates*/\n    handleDate = (fecha, name) => {\n        this.setState({\n            [name]: fecha,\n        });\n    };\n\n    /*Manejador del botón submit*/\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.updateDB();\n    };\n\n    updateDB = () => {\n        fetch(api.url + \"/expedienteMedico\", {\n            method: \"put\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(this.state),\n        })\n            .then((response) => response.json())\n            .then((response) => {})\n            .catch((err) => console.log(err));\n    };\n\n    /*Manejadores de Restablecer*/\n    handleRestablecer = () => {\n        this.fetchData();\n    };\n\n    fetchData = () => {\n        let url = this.props.location.search;\n        let params = queryString.parse(url);\n\n        if (!params.id) {\n            this.setState({\n                showErrorPage: true,\n            });\n            return;\n        } else {\n            this.setState({\n                id: params.id,\n            });\n        }\n\n        fetch(api.url + \"/expedienteMedico/?id=\" + params.id, {\n            method: \"get\",\n            headers: { \"Content-Type\": \"application/json\" },\n        })\n            .then((response) => response.json())\n            .then((response) => {\n                if (Object.keys(response).length === 1) {\n                    this.setState({\n                        showErrorPage: true,\n                    });\n                    return;\n                }\n                for (const element in response) {\n                    if (element.includes(\"fecha\")) {\n                        const date = response[element];\n                        if (!date || date === \"\" || date === \"0000-00-00\")\n                            continue;\n                        this.setState({\n                            [element]: new Date(date),\n                        });\n                    } else if (element.includes(\"foto\")) {\n                        if (response[element]) {\n                            var buffer = Buffer.from(response[element].data);\n\n                            this.setState({\n                                [element]: buffer.toString(\"utf8\"),\n                            });\n                        }\n                    } else {\n                        this.setState({\n                            [element]: response[element],\n                        });\n                    }\n                }\n            })\n            .catch((err) => console.log(err));\n    };\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    /*Manejador de datagrid medico*/\n    addRow = (event) => {\n        event.preventDefault();\n        const newRow = {\n            id: shortid.generate(),\n            fechaInicio: null,\n            fechaFinal: null,\n            comentarios: \"\",\n            accion: \"\",\n            citaMedica: null,\n        };\n        this.setState((state) => ({\n            tratamiento: [newRow, ...state.tratamiento],\n        }));\n    };\n\n    deleteRow = (id) => {\n        this.setState((state) => ({\n            tratamiento: state.tratamiento.filter((row) => row.id !== id),\n        }));\n    };\n\n    modifyRow = (id, name, value) => {\n        let dataTemp = this.state.tratamiento;\n        if (!dataTemp) return;\n\n        dataTemp.forEach((element) => {\n            if (element.id === id) {\n                if (name === \"fechaInicio\") element.fechaInicio = value;\n                else if (name === \"fechaFinal\") element.fechaFinal = value;\n                else if (name === \"comentarios\") element.comentarios = value;\n                else if (name === \"accion\") element.accion = value;\n                else if (name === \"citaMedica\") element.citaMedica = value;\n            }\n        });\n        this.setState({\n            tratamiento: dataTemp,\n        });\n    };\n\n    handleAlert(e, msg) {\n        if (e === \"openSuccess\") {\n            this.setState({\n                ...this.state,\n                openError: false,\n                openSuccess: true,\n            });\n        } else if (e === \"openError\") {\n            this.setState({\n                ...this.state,\n                openError: true,\n                openSuccess: false,\n                msg: msg,\n            });\n        }\n    }\n\n    /*Expediente Médico*/\n    render() {\n        if (this.state.showErrorPage) return <ErrorPage />;\n\n        return (\n            <div className=\"RegistroMedico\">\n                <div className=\"NavBarRegistrosMedico\">\n                    <NavBarRegistros\n                        tabIndicatorPosition={\"25%\"}\n                        activePosition={\"ExpedienteMedico\"}\n                        id={this.state.id}\n                    />\n                </div>\n\n                <div className=\"alertExp\">\n                    <Collapse in={this.state.openError}>\n                        <Alert\n                            onClose={() => {\n                                this.setState({\n                                    ...this.state,\n                                    openError: false,\n                                });\n                            }}\n                            variant=\"outlined\"\n                            severity=\"error\"\n                        >\n                            <AlertTitle>\n                                Error - Faltan llenar los siguientes campos\n                            </AlertTitle>\n                            {this.state.msg}\n                        </Alert>\n                    </Collapse>\n\n                    <Collapse in={this.state.openSuccess}>\n                        <Alert\n                            onClose={() => {\n                                this.setState({\n                                    ...this.state,\n                                    openSuccess: false,\n                                });\n                            }}\n                            variant=\"outlined\"\n                            severity=\"success\"\n                        >\n                            <AlertTitle>Datos guardados</AlertTitle>\n                        </Alert>\n                    </Collapse>\n                </div>\n\n                <div className=\"FormularioMedico\">\n                    <div className=\"diagnostico\">\n                        <Diagnostico\n                            atropellamiento={this.state.atropellamiento}\n                            tvt={this.state.tvt}\n                            sarnaPiel={this.state.sarnaPiel}\n                            viral={this.state.viral}\n                            embarazo={this.state.embarazo}\n                            cachorros={this.state.cachorros}\n                            hemoparasitos={this.state.hemoparasitos}\n                            otro={this.state.otro}\n                            otroEspecificar={this.state.otroEspecificar}\n                            handleChange={this.handleChange}\n                        />\n                    </div>\n                    <div className=\"esterilizacion\">\n                        <Esterilizacion\n                            esterilizado={this.state.esterilizado}\n                            citaEsterilizacion={this.state.citaEsterilizacion}\n                            fechaEsterilizacion={this.state.fechaEsterilizacion}\n                            handleChange={this.handleChange}\n                            handleDate={this.handleDate}\n                        />\n                    </div>\n                    <div className=\"cartillaVacunacion\">\n                        <CartillaVacunacion\n                            vacuna1={this.state.vacuna1}\n                            vacuna2={this.state.vacuna2}\n                            vacuna3={this.state.vacuna3}\n                            vacuna4={this.state.vacuna4}\n                            vacuna5={this.state.vacuna5}\n                            fechaVacuna1={this.state.fechaVacuna1}\n                            fechaVacuna2={this.state.fechaVacuna2}\n                            fechaVacuna3={this.state.fechaVacuna3}\n                            fechaVacuna4={this.state.fechaVacuna4}\n                            fechaVacuna5={this.state.fechaVacuna5}\n                            handleChange={this.handleChange}\n                            handleDate={this.handleDate}\n                            especie={this.state.especie}\n                        />\n                    </div>\n                    <div className=\"tratamiento\">\n                        <div className=\"headerTratamiento\">\n                            {\" \"}\n                            <i\n                                aria-hidden=\"true\"\n                                className=\"fa fa-heartbeat fa-fw separation\"\n                            ></i>\n                            Tratamiento\n                        </div>\n\n                        <DataGridMed\n                            data={this.state.tratamiento}\n                            modifyRow={this.modifyRow}\n                            addRow={this.addRow}\n                            deleteRow={this.deleteRow}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"BarraLateralMedico\">\n                    <div className=\"idLabelMedico\">\n                        <label>ID: {this.state.id}</label>\n                    </div>\n                    <div className=\"fotoMedico1\">\n                        <Foto\n                            id=\"foto1\"\n                            className=\"pt3\"\n                            foto={this.state.foto1}\n                            imageHandler={this.imageHandler}\n                        />\n                    </div>\n                    <div className=\"fotoMedico2\">\n                        <Foto\n                            id=\"foto2\"\n                            className=\"pt3\"\n                            foto={this.state.foto2}\n                            imageHandler={this.imageHandler}\n                        />\n                    </div>\n                    <div className=\"fotoMedico3\">\n                        <Foto\n                            id=\"foto3\"\n                            className=\"pt3\"\n                            foto={this.state.foto3}\n                            imageHandler={this.imageHandler}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"BotonesRegistroMedico\">\n                    <Link\n                        to={\n                            \"/Laika/RegistroGeneral\" +\n                            this.props.location.search\n                        }\n                    >\n                        <button className=\"BotonMedicoTransicion BotonAnteriorMedico\">\n                            {\" \"}\n                            <i\n                                aria-hidden=\"true\"\n                                className=\"fa fa-chevron-circle-left fa-fw\"\n                            ></i>\n                            Registro General\n                        </button>\n                    </Link>\n                    <button\n                        className=\"BotonMedicoRestablecer BotonCentralMedico\"\n                        onClick={this.handleRestablecer}\n                    >\n                        Restablecer{\" \"}\n                        <i\n                            aria-hidden=\"true\"\n                            className=\"fa fa-eraser fa-fw\"\n                        ></i>\n                    </button>\n                    <button\n                        className=\"BotonMedicoGuardar BotonCentralMedico\"\n                        onClick={(event) => {\n                            const alert = validationExpMed(this.state);\n                            if (alert.isValid) {\n                                this.handleSubmit(event);\n                                this.handleAlert(\"openSuccess\");\n                            } else {\n                                this.handleAlert(\"openError\", alert.msg);\n                            }\n                        }}\n                    >\n                        Guardar{\" \"}\n                        <i aria-hidden=\"true\" className=\"fa fa-save fa-fw\"></i>\n                    </button>\n                    <Link\n                        to={\"/Laika/HogarTemporal\" + this.props.location.search}\n                    >\n                        <button className=\"BotonMedicoTransicion BotonSiguienteMedico\">\n                            Hogar Temporal{\" \"}\n                            <i\n                                aria-hidden=\"true\"\n                                className=\"fa fa-chevron-circle-right fa-fw\"\n                            ></i>\n                        </button>\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(ExpedienteMedico);\n"]},"metadata":{},"sourceType":"module"}